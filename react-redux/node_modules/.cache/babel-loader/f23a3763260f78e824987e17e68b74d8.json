{"ast":null,"code":"var _jsxFileName = \"D:\\\\1\\u4EE3\\u7801\\\\hmreact\\\\react-hooks\\\\react-redux\\\\src\\\\components\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { delTodo } from \"../store/actions/todos\";\n/**\r\n * 1.给删除注册点击事件。。。点击事件需要传递参数id\r\n * 2.再事件处理程序中获取id 并且dispatch delTodo中的action\r\n * 3.在action/todo.js文件中定义delTodo的action\r\n *   带异步的，所以需要发送请求  \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoItem(_ref) {\n  _s();\n\n  let {\n    item\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const del = id => {\n    dispatch(delTodo(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: item.done ? 'completed' : '',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        checked: item.done\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"destroy\",\n        onClick: () => del(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"edit\",\n      defaultValue: \"Create a TodoMVC template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["D:/1代码/hmreact/react-hooks/react-redux/src/components/TodoItem.js"],"names":["useDispatch","delTodo","TodoItem","item","dispatch","del","id","done","name"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,QAAT,OAA0B;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AACvC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,QAAMK,GAAG,GAAIC,EAAD,IAAM;AAChBF,IAAAA,QAAQ,CAACH,OAAO,CAACK,EAAD,CAAR,CAAR;AACD,GAFD;;AAGA,sBACE;AAAI,IAAA,SAAS,EAAEH,IAAI,CAACI,IAAL,GAAU,WAAV,GAAsB,EAArC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,UAA/B;AAA0C,QAAA,OAAO,EAAEJ,IAAI,CAACI;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAQJ,IAAI,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,MAAIH,GAAG,CAACF,IAAI,CAACG,EAAN;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,YAAY,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAfuBJ,Q;UACLF,W;;;KADKE,Q","sourcesContent":["import { useDispatch } from \"react-redux\"\r\nimport { delTodo } from \"../store/actions/todos\"\r\n\r\n/**\r\n * 1.给删除注册点击事件。。。点击事件需要传递参数id\r\n * 2.再事件处理程序中获取id 并且dispatch delTodo中的action\r\n * 3.在action/todo.js文件中定义delTodo的action\r\n *   带异步的，所以需要发送请求  \r\n */\r\n\r\nexport default function TodoItem({item}) {\r\n  const dispatch = useDispatch()\r\n  const del = (id)=>{\r\n    dispatch(delTodo(id))\r\n  }\r\n  return (\r\n    <li className={item.done?'completed':''}>\r\n      <div className=\"view\">\r\n        <input className=\"toggle\" type=\"checkbox\" checked={item.done}/>\r\n        <label>{item.name}</label>\r\n        <button className=\"destroy\" onClick={()=>del(item.id)}/>\r\n      </div>\r\n      <input className=\"edit\" defaultValue=\"Create a TodoMVC template\" />\r\n    </li>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}