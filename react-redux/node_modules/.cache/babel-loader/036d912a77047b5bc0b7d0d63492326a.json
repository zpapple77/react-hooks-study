{"ast":null,"code":"var _jsxFileName = \"D:\\\\1\\u4EE3\\u7801\\\\hmreact\\\\react-hooks\\\\react-redux\\\\src\\\\components\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeDone, changeName, delTodo } from '../store/actions/todos';\n/**\r\n * 1.给删除注册点击事件。。。点击事件需要传递参数id\r\n * 2.再事件处理程序中获取id 并且dispatch delTodo中的action\r\n * 3.在action/todo.js文件中定义delTodo的action\r\n *   带异步的，所以需要发送请求  并且dispatch（{}）\r\n * 4.在reducer中处理这个action  根据id过滤对应的任务\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoItem(_ref) {\n  _s();\n\n  let {\n    item\n  } = _ref;\n  const dispatch = useDispatch();\n  const [current, setCurrent] = useState('');\n  const inputRef = useRef(null);\n\n  const del = id => {\n    dispatch(delTodo(id));\n  };\n\n  const showEdit = id => {\n    setCurrent(id);\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [current]);\n\n  const change = (id, done) => {\n    dispatch(changeDone(id, done));\n  };\n\n  const onKeyUp = e => {\n    if (e.keyCode === 27) {\n      setCurrent('');\n    }\n\n    if (e.keyCode === 13) {\n      //修改任务的名字\n      dispatch(changeName(id, e.target.value));\n      setCurrent('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: [item.done ? 'completed' : '', item.id === current ? 'editing' : ''].join(' '),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        checked: item.done,\n        onChange: e => change(item.id, e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        onDoubleClick: () => showEdit(item.id),\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"destroy\",\n        onClick: () => del(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"edit\",\n      defaultValue: item.name,\n      ref: inputRef,\n      onBlur: () => {\n        setCurrent('');\n      },\n      onKeyUp: e => onKeyUp(item.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoItem, \"3eq9BkcBUplyP49vCDcGYxCRhXg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["D:/1代码/hmreact/react-hooks/react-redux/src/components/TodoItem.js"],"names":["useEffect","useRef","useState","useDispatch","changeDone","changeName","delTodo","TodoItem","item","dispatch","current","setCurrent","inputRef","del","id","showEdit","focus","change","done","onKeyUp","e","keyCode","target","value","join","checked","name"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeDone, changeName, delTodo } from '../store/actions/todos'\r\n\r\n/**\r\n * 1.给删除注册点击事件。。。点击事件需要传递参数id\r\n * 2.再事件处理程序中获取id 并且dispatch delTodo中的action\r\n * 3.在action/todo.js文件中定义delTodo的action\r\n *   带异步的，所以需要发送请求  并且dispatch（{}）\r\n * 4.在reducer中处理这个action  根据id过滤对应的任务\r\n */\r\n\r\nexport default function TodoItem({ item }) {\r\n  const dispatch = useDispatch()\r\n\r\n  const [current, setCurrent] = useState('')\r\n  const inputRef = useRef(null)\r\n\r\n  const del = (id) => {\r\n    dispatch(delTodo(id))\r\n  }\r\n  const showEdit = (id) => {\r\n    setCurrent(id)\r\n  }\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, [current])\r\n  const change = (id, done) => {\r\n    dispatch(changeDone(id, done))\r\n  }\r\n  const onKeyUp=(e)=>{\r\n    if(e.keyCode===27){\r\n      setCurrent('')\r\n    }\r\n    if(e.keyCode===13){\r\n      //修改任务的名字\r\n      dispatch(changeName(id,e.target.value))\r\n      setCurrent('')\r\n    }\r\n  }\r\n  return (\r\n    <li\r\n      className={[\r\n        item.done ? 'completed' : '',\r\n        item.id === current ? 'editing' : '',\r\n      ].join(' ')}\r\n    >\r\n      \r\n      <div className=\"view\">\r\n        <input\r\n          className=\"toggle\"\r\n          type=\"checkbox\"\r\n          checked={item.done}\r\n          onChange={(e) => change(item.id, e.target.checked)}\r\n        />\r\n        <label onDoubleClick={() => showEdit(item.id)}>{item.name}</label>\r\n        <button className=\"destroy\" onClick={() => del(item.id)} />\r\n      </div>\r\n      <input\r\n        className=\"edit\"\r\n        defaultValue={item.name}\r\n        ref={inputRef}\r\n        onBlur={() => {\r\n          setCurrent('')\r\n        }}\r\n        onKeyUp={\r\n          e=>onKeyUp(item.id)\r\n        }\r\n      />\r\n    </li>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}