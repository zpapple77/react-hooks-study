{"ast":null,"code":"var _jsxFileName = \"D:\\\\1\\u4EE3\\u7801\\\\hmreact\\\\react-hooks\\\\react-hooks-study\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\r\n * 1. 使用useRef能够创建一个ref对象，有current属性 {current：null}  const xxRef = useRef(null)\r\n * 2. 通过ref属性关联到某个DOM对象上，（current：DOM） <div ref = {xxRef}></div>\r\n * 3. 可以通过xxRef.current访问到对应的DOM\r\n */\nimport React, { useState, memo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [count, setCount] = useState(5);\n\n  const help = () => {\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u6211\\u662F\\u7236\\u7EC4\\u4EF6-\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(count - 1);\n      },\n      children: \"\\u6253\\u8C46\\u8C46\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), count > 0 ? /*#__PURE__*/_jsxDEV(Child1, {\n      count: count,\n      help: help\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this) : '豆豆被打死了', /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\u7EED\\u547D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}; // @ts-ignore\n\n\n_s(App, \"3Ah5YcJrgZh+T+j+0PvIr2v3YTw=\");\n\n_c = App;\n\nconst Child1 = _ref => {\n  let {\n    countnhelp\n  } = _ref;\n  console.log('Child1更新');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\u8C46\\u8C46\\u88AB\\u6253\\u4E86\", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = Child1;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Child1\");","map":{"version":3,"sources":["D:/1代码/hmreact/react-hooks/react-hooks-study/src/index.js"],"names":["React","useState","memo","ReactDOM","App","count","setCount","help","Child1","countnhelp","console","log","render","document","getElementById"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMM,IAAI,GAAG,MAAM;AACjBD,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAA,oDAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EASGA,KAAK,GAAG,CAAR,gBAAY,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,KAAf;AAAsB,MAAA,IAAI,EAAEE;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAZ,GAA0D,QAT7D,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApBD,C,CAqBA;;;GArBMH,G;;KAAAA,G;;AAsBN,MAAMI,MAAM,GAAG,QAAoB;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,sBAAO;AAAA,iDAAWN,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;MAAMG,M;AAINL,QAAQ,CAACS,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA6BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA7B","sourcesContent":["/**\r\n * 1. 使用useRef能够创建一个ref对象，有current属性 {current：null}  const xxRef = useRef(null)\r\n * 2. 通过ref属性关联到某个DOM对象上，（current：DOM） <div ref = {xxRef}></div>\r\n * 3. 可以通过xxRef.current访问到对应的DOM\r\n */\r\nimport React, { useState, memo } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nconst App = () => {\r\n  const [count, setCount] = useState(5)\r\n  const help = () => {\r\n    setCount(count+1)\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>我是父组件-{count}</h2>\r\n      <button\r\n        onClick={() => {\r\n          setCount(count - 1)\r\n        }}\r\n      >\r\n        打豆豆\r\n      </button>\r\n      {count > 0 ? <Child1 count={count} help={help}></Child1> : '豆豆被打死了'}\r\n      <hr />\r\n      <button>续命</button>\r\n    </div>\r\n  )\r\n}\r\n// @ts-ignore\r\nconst Child1 = ({ countnhelp }) => {\r\n  console.log('Child1更新')\r\n  return <div>豆豆被打了{count}</div>\r\n}\r\nReactDOM.render(<App></App>, document.getElementById('root'))\r\n"]},"metadata":{},"sourceType":"module"}