{"ast":null,"code":"var _jsxFileName = \"D:\\\\1\\u4EE3\\u7801\\\\hmreact\\\\react-hooks\\\\react-hooks-study\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\r\n * 1. 使用useRef能够创建一个ref对象，有current属性 {current：null}  const xxRef = useRef(null)\r\n * 2. 通过ref属性关联到某个DOM对象上，（current：DOM） <div ref = {xxRef}></div>\r\n * 3. 可以通过xxRef.current访问到对应的DOM\r\n */\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const add = () => {\n    console.log(inputRef.current.value);\n  };\n\n  const inputRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5185\\u5BB9\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"\\u6DFB\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/1代码/hmreact/react-hooks/react-hooks-study/src/index.js"],"names":["ReactDOM","App","add","console","log","inputRef","current","value","useRef","render","document","getElementById"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,WAArB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,GAAG,GAAE,MAAM;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,OAAT,CAAiBC,KAA7B;AACD,GAFD;;AAGA,QAAMF,QAAQ,GAAGG,MAAM,CAAC,IAAD,CAAvB;AACA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,gCAA/B;AAAuC,MAAA,GAAG,EAAIH;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEH,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAXD;;GAAMD,G;;KAAAA,G;AAaND,QAAQ,CAACS,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B","sourcesContent":["/**\r\n * 1. 使用useRef能够创建一个ref对象，有current属性 {current：null}  const xxRef = useRef(null)\r\n * 2. 通过ref属性关联到某个DOM对象上，（current：DOM） <div ref = {xxRef}></div>\r\n * 3. 可以通过xxRef.current访问到对应的DOM\r\n */\r\nimport ReactDOM from 'react-dom'\r\nconst App = () => {\r\n  const add =() => {\r\n    console.log(inputRef.current.value)\r\n  }\r\n  const inputRef = useRef(null)\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"请输入内容\" ref = {inputRef}/>\r\n      <button onClick={add}>添加</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App></App>,document.getElementById('root'))\r\n"]},"metadata":{},"sourceType":"module"}