{"ast":null,"code":"var _jsxFileName = \"D:\\\\1\\u4EE3\\u7801\\\\hmreact\\\\react-hooks\\\\react-hooks-study\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\r\n * 1. 使用useRef能够创建一个ref对象，有current属性 {current：null}  const xxRef = useRef(null)\r\n * 2. 通过ref属性关联到某个DOM对象上，（current：DOM） <div ref = {xxRef}></div>\r\n * 3. 可以通过xxRef.current访问到对应的DOM\r\n */\nimport React, { useState, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u6211\\u662F\\u7236\\u7EC4\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(count + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Child1, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Child2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n\n_c = App;\n\nconst Child1 = _ref => {\n  let {\n    count\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Child1\\u7EC4\\u4EF6\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 4\n  }, this);\n};\n\n_c2 = Child1;\n\nconst Child2 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Child2\\u7EC4\\u4EF6\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 4\n  }, this);\n};\n\n_c3 = Child2;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Child1\");\n$RefreshReg$(_c3, \"Child2\");","map":{"version":3,"sources":["D:/1代码/hmreact/react-hooks/react-hooks-study/src/index.js"],"names":["React","useState","useContext","ReactDOM","App","count","setCount","Child1","Child2","render","document","getElementById"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,CAAD,CAAjC;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACK,QAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAAkB;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAIA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVD;;GAAMD,G;;KAAAA,G;;AAWN,MAAMG,MAAM,GAAG,QAAa;AAAA,MAAZ;AAACF,IAAAA;AAAD,GAAY;AAC1B,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGD,CAJD;;MAAME,M;;AAKN,MAAMC,MAAM,GAAG,MAAM;AACnB,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGD,CAJD;;MAAMA,M;AAMNL,QAAQ,CAACM,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA6BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA7B","sourcesContent":["/**\r\n * 1. 使用useRef能够创建一个ref对象，有current属性 {current：null}  const xxRef = useRef(null)\r\n * 2. 通过ref属性关联到某个DOM对象上，（current：DOM） <div ref = {xxRef}></div>\r\n * 3. 可以通过xxRef.current访问到对应的DOM\r\n */\r\nimport React,{ useState ,useContext} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nconst App = () => {\r\n  const [count,setCount] = useState(0)\r\n  return (\r\n    <div>\r\n      <h2>我是父组件</h2>\r\n      <button onClick={()=>{setCount(count+1)}}></button>\r\n      <Child1 count = {count}></Child1>\r\n      <Child2></Child2>\r\n    </div>\r\n  )\r\n}\r\nconst Child1 = ({count}) => {\r\n  return (\r\n   <div>Child1组件</div>\r\n  )\r\n}\r\nconst Child2 = () => {\r\n  return (\r\n   <div>Child2组件</div>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App></App>, document.getElementById('root'))\r\n"]},"metadata":{},"sourceType":"module"}